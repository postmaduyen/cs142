{"ast":null,"code":"var _jsxFileName = \"/home/quan/project6_photoSharing/frontend/src/components/UserPhotos/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport fetchModel from \"../../lib/fetchModelData\";\nimport CommentCustom from \"../CustomComment\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserPhotos(props) {\n  _s();\n  const user = props.user;\n  console.log(\"user photo:\" + user);\n  const {\n    userId\n  } = useParams();\n  const [photos, setPhotos] = useState([]); // State to store the photo list\n  const fetchUserPhotos = async () => {\n    try {\n      const data = await fetchModel(`photo/${userId}`);\n      setPhotos(data); // Assuming data is an array of photos\n    } catch (error) {\n      console.error(\"Error fetching user photos:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUserPhotos();\n  }, [userId]);\n  const addComment = () => {\n    fetchUserPhotos(); // Refetch photos after comment addition\n  };\n  if (photos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No photos found for this user.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: [\"User Photos for User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), photos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../../../../backend/images/\" + photo.file_name),\n        height: 300,\n        width: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: [\"Time: \", photo.date_time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), photo.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Comment: \", comment.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Time: \", comment.date_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(CommentCustom, {\n        photo_id: photo._id,\n        user: user,\n        addComment: addComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, photo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPhotos, \"ilFOEtI0dWeOWjiFqBIAqwRhilM=\", false, function () {\n  return [useParams];\n});\n_c = UserPhotos;\nexport default UserPhotos;\nvar _c;\n$RefreshReg$(_c, \"UserPhotos\");","map":{"version":3,"names":["React","useState","useEffect","Typography","useParams","fetchModel","CommentCustom","jsxDEV","_jsxDEV","UserPhotos","props","_s","user","console","log","userId","photos","setPhotos","fetchUserPhotos","data","error","addComment","length","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","map","photo","src","require","file_name","height","width","date_time","comments","comment","_id","photo_id","_c","$RefreshReg$"],"sources":["/home/quan/project6_photoSharing/frontend/src/components/UserPhotos/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport fetchModel from \"../../lib/fetchModelData\";\nimport CommentCustom from \"../CustomComment\";\nimport \"./styles.css\";\nfunction UserPhotos(props) {\n  const user = props.user;\n  console.log(\"user photo:\" + user);\n  const { userId } = useParams();\n  const [photos, setPhotos] = useState([]); // State to store the photo list\n  const fetchUserPhotos = async () => {\n    try {\n      const data = await fetchModel(`photo/${userId}`);\n      setPhotos(data); // Assuming data is an array of photos\n    } catch (error) {\n      console.error(\"Error fetching user photos:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUserPhotos();\n  }, [userId]);\n  const addComment = () => {\n    fetchUserPhotos(); // Refetch photos after comment addition\n  };\n  if (photos.length === 0) {\n    return <div>No photos found for this user.</div>;\n  }\n\n  return (\n    <div>\n      <Typography variant=\"body1\">User Photos for User ID: {userId}</Typography>\n      {photos.map((photo) => (\n        <div key={photo._id}>\n          <img\n            src={require(\"../../../../backend/images/\" + photo.file_name)}\n            height={300}\n            width={300}\n          />\n          <Typography variant=\"body2\">Time: {photo.date_time}</Typography>\n          <Typography variant=\"h6\">Comments</Typography>\n\n          {photo.comments.map((comment) => (\n            <div key={comment._id}>\n              <Typography variant=\"body2\">\n                Comment: {comment.comment}\n              </Typography>\n              <Typography variant=\"body2\">Time: {comment.date_time}</Typography>\n            </div>\n          ))}\n          <CommentCustom\n            photo_id={photo._id}\n            user={user}\n            addComment={addComment}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default UserPhotos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}