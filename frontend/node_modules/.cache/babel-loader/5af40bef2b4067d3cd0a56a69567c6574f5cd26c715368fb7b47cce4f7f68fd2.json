{"ast":null,"code":"var _jsxFileName = \"/home/quan/project6_photoSharing/frontend/src/components/UserPhotos/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Typography, Button } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport fetchModel from \"../../lib/fetchModelData\";\nimport CommentCustom from \"../CustomComment\";\n// import \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserPhotos(props) {\n  _s();\n  const user = props.user;\n  const {\n    userId\n  } = useParams();\n  const [photos, setPhotos] = useState([]); // State to store the photo list\n\n  const fetchUserPhotos = async () => {\n    try {\n      const data = await fetchModel(`photo/${userId}`);\n      setPhotos(data); // Assuming data is an array of photos\n    } catch (error) {\n      console.error(\"Error fetching user photos:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUserPhotos();\n  }, [userId]);\n  const addComment = () => {\n    fetchUserPhotos(); // Refetch photos after comment addition\n  };\n  const handleAddPhoto = () => {\n    // Implement the functionality to add a photo\n    // This can be a modal or a redirect to a photo upload page\n    console.log(\"Add photo button clicked\");\n  };\n  if (photos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No photos found for this user.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-photos-container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: [\"User Photos for User ID: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), props.user === userId && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleAddPhoto,\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: \"Add Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), photos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8081/api/photo/images/${photo.file_name}`,\n        alt: `Photo by user ${userId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-details\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Time: \", photo.date_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-section\",\n          children: photo.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-item\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Comment: \", comment.comment]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Time: \", comment.date_time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, comment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CommentCustom, {\n          photo_id: photo._id,\n          user: user,\n          addComment: addComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, photo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPhotos, \"ilFOEtI0dWeOWjiFqBIAqwRhilM=\", false, function () {\n  return [useParams];\n});\n_c = UserPhotos;\nexport default UserPhotos;\nvar _c;\n$RefreshReg$(_c, \"UserPhotos\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Button","useParams","fetchModel","CommentCustom","jsxDEV","_jsxDEV","UserPhotos","props","_s","user","userId","photos","setPhotos","fetchUserPhotos","data","error","console","addComment","handleAddPhoto","log","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","variant","color","onClick","style","marginBottom","map","photo","src","file_name","alt","date_time","comments","comment","_id","photo_id","_c","$RefreshReg$"],"sources":["/home/quan/project6_photoSharing/frontend/src/components/UserPhotos/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography, Button } from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport fetchModel from \"../../lib/fetchModelData\";\nimport CommentCustom from \"../CustomComment\";\n// import \"./styles.css\";\n\nfunction UserPhotos(props) {\n  const user = props.user;\n  const { userId } = useParams();\n  const [photos, setPhotos] = useState([]); // State to store the photo list\n\n  const fetchUserPhotos = async () => {\n    try {\n      const data = await fetchModel(`photo/${userId}`);\n      setPhotos(data); // Assuming data is an array of photos\n    } catch (error) {\n      console.error(\"Error fetching user photos:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserPhotos();\n  }, [userId]);\n\n  const addComment = () => {\n    fetchUserPhotos(); // Refetch photos after comment addition\n  };\n\n  const handleAddPhoto = () => {\n    // Implement the functionality to add a photo\n    // This can be a modal or a redirect to a photo upload page\n    console.log(\"Add photo button clicked\");\n  };\n\n  if (photos.length === 0) {\n    return <div>No photos found for this user.</div>;\n  }\n\n  return (\n    <div className=\"user-photos-container\">\n      <Typography variant=\"body1\">User Photos for User ID: {userId}</Typography>\n      {props.user === userId && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleAddPhoto}\n          style={{ marginBottom: \"20px\" }}\n        >\n          Add Photo\n        </Button>\n      )}\n      {photos.map((photo) => (\n        <div key={photo._id} className=\"photo-container\">\n          <img\n            src={`http://localhost:8081/api/photo/images/${photo.file_name}`}\n            alt={`Photo by user ${userId}`}\n          />\n          <div className=\"photo-details\">\n            <Typography variant=\"body2\">Time: {photo.date_time}</Typography>\n            <Typography variant=\"h6\">Comments</Typography>\n            <div className=\"comments-section\">\n              {photo.comments.map((comment) => (\n                <div key={comment._id} className=\"comment-item\">\n                  <Typography variant=\"body2\">\n                    Comment: {comment.comment}\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    Time: {comment.date_time}\n                  </Typography>\n                </div>\n              ))}\n            </div>\n            <CommentCustom\n              photo_id={photo._id}\n              user={user}\n              addComment={addComment}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default UserPhotos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}